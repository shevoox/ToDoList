@model IEnumerable<ToDoList.Models.TodoTask>

@{
    ViewData["Title"] = "My Tasks";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-5">
        <div>
            <h1 class="display-4 mb-0 fw-bold">My Tasks</h1>
            <p class="text-muted">Manage your daily tasks efficiently</p>
        </div>
        <a asp-action="Create" class="btn btn-primary btn-lg rounded-pill shadow-sm">
            <i class="bi bi-plus-lg me-2"></i> Add New Task
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="bi bi-clipboard-check display-1 text-muted mb-3"></i>
            <h3 class="mb-3">No tasks yet</h3>
            <p class="text-muted mb-4">Create your first task to get started</p>
            <a asp-action="Create" class="btn btn-primary btn-lg rounded-pill">
                <i class="bi bi-plus-lg me-2"></i> Create Your First Task
            </a>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100 @(item.IsCompleted ? "border-success task-complete" : "")">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-3">
                                <h5 class="card-title @(item.IsCompleted ? "text-decoration-line-through" : "")">
                                    @Html.DisplayFor(modelItem => item.Title)
                                </h5>
                                <span class="badge @(item.IsCompleted ? "bg-success" : "bg-warning")">
                                    @(item.IsCompleted ? "Completed" : "Pending")
                                </span>
                            </div>
                            <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                            <div class="d-flex align-items-center text-muted mb-3">
                                <i class="bi bi-calendar-event me-2"></i>
                                <small>Due: @(item.DueDate.ToString("MMM dd, yyyy") ?? "No due date")</small>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top-0">
                            <div class="d-flex justify-content-between">
                                <form asp-action="ToggleComplete" asp-route-id="@item.Id" method="post" class="me-2">
                                    <button type="submit" class="btn btn-sm @(item.IsCompleted ? "btn-success" : "btn-outline-secondary") rounded-pill">
                                        <i class="bi @(item.IsCompleted ? "bi-check-circle-fill" : "bi-circle")"></i>
                                        @(item.IsCompleted ? "Completed" : "Mark Complete")
                                    </button>
                                </form>
                                <div class="d-flex">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary me-2 rounded-pill">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post"
                                          onsubmit="return confirm('Are you sure you want to delete this task?');">
                                        <button type="submit" class="btn btn-sm btn-outline-danger rounded-pill">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Styles {
    <style>
        .card {
            transition: all 0.3s ease;
            border-radius: 16px;
            overflow: hidden;
            border: none;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            }

            .card.border-success {
                border-left: 4px solid #198754;
            }

        .card-title {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #2c3e50;
        }

        .card-text {
            color: #6c757d;
            line-height: 1.5;
        }

        .badge {
            font-weight: 500;
            padding: 0.5em 0.8em;
            border-radius: 6px;
        }

        .btn-sm {
            padding: 0.4rem 0.8rem;
            font-size: 0.875rem;
            border-radius: 20px;
            transition: all 0.2s ease;
        }

            .btn-sm:hover {
                transform: translateY(-2px);
            }

        .btn-outline-primary {
            border-width: 2px;
        }

        .btn-outline-danger {
            border-width: 2px;
        }

        .btn-outline-secondary {
            border-width: 2px;
        }

        .text-decoration-line-through {
            text-decoration-color: #198754;
        }

        .rounded-pill {
            border-radius: 50rem !important;
        }

        .shadow-sm {
            box-shadow: 0 .125rem .25rem rgba(0,0,0,.075) !important;
        }
    </style>
}